services:
  elevare-docker-compose:
    build:
      context: ./nextapp
      dockerfile: ./DockerFile
    image: elevare-docker-compose
    ports:
      - "3000:3000"
    networks:
      - elevare
    container_name: prod_nextapp
  fastapi:
    build: ./LLM
    container_name: prod_fastapi_dev

    depends_on:
      - qdrant
    environment:
      - QDRANT_HOST=http://qdrant:6333
      - QDRANT_PORT=6333
    networks:
      - elevare
    command: ["fastapi", "run", "main.py"]

  qdrant:
    image: qdrant/qdrant:v1.3.0
    container_name: prod_qdrant

    networks:
      - elevare
  bg_tasks:
    build:
      context: ./bg_tasks
      dockerfile: ./dockerfile
    image: bg_tasks
    container_name: prod_bgTasks
    env_file:
      - ./bg_tasks/.env.production
    networks:
      - elevare
  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10
  kestra:
    image: kestra/kestra:latest
    pull_policy: always
    # Note that this setup with a root user is intended for development purpose.
    # Our base image runs without root, but the Docker Compose implementation needs root to access the Docker socket
    # To run Kestra in a rootless mode in production, see: https://kestra.io/docs/installation/podman-compose
    user: "root"
    command: server standalone
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
      - ./workflow:/app/storage/flows
    environment:
      SECRET_ELEVARE_HELP_PASS: b3hhayBsZ2RtIGh4a3AgZGRobw==
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            basicAuth:
              enabled: false
              username: "admin@kestra.io" # it must be a valid email address
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
        micronaut:
          server:
            cors:
              enabled: true
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_started
volumes:
  postgres-data:
    driver: local
  kestra-data:
    driver: local
networks:
  elevare:
    driver: bridge
